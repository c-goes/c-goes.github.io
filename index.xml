<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Containers Blog</title><link>https://c-goes.github.io/</link><description>Recent content on Containers Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 May 2021 17:00:00 +0200</lastBuildDate><atom:link href="https://c-goes.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>How to setup Docker with fuse-overlayfs in Proxmox LXC container</title><link>https://c-goes.github.io/posts/proxmox-lxc-docker-fuse-overlayfs/</link><pubDate>Thu, 13 May 2021 17:00:00 +0200</pubDate><guid>https://c-goes.github.io/posts/proxmox-lxc-docker-fuse-overlayfs/</guid><description>Create a new LXC Container In Proxmox VE create a unprivileged LXC container with fuse=1,keyctl=1,mknod=1,nesting=1 (I&amp;rsquo;m not sure if all are needed). In this case I use a Ubuntu 18.04 container.
Installation of fuse-overlayfs Then inside the container, install a static version of fuse-overlayfs. and place it in /usr/local/bin so it&amp;rsquo;s named /usr/local/bin/fuse-overlayfs.
Installation of docker.io docker.io is the Debian specific build of the Moby container engine. Unlike noted in the Docker documentation this isn&amp;rsquo;t an old version but rather a version packaged by the Debian Go team.</description><content>&lt;h1 id="create-a-new-lxc-container">Create a new LXC Container&lt;/h1>
&lt;p>In Proxmox VE create a unprivileged LXC container with &lt;code>fuse=1,keyctl=1,mknod=1,nesting=1&lt;/code> (I&amp;rsquo;m not sure if all are needed).
In this case I use a Ubuntu 18.04 container.&lt;/p>
&lt;h1 id="installation-of-fuse-overlayfs">Installation of &lt;code>fuse-overlayfs&lt;/code>&lt;/h1>
&lt;p>Then inside the container, install a static version of &lt;a href="https://github.com/containers/fuse-overlayfs/releases">fuse-overlayfs&lt;/a>.
and place it in &lt;code>/usr/local/bin&lt;/code> so it&amp;rsquo;s named &lt;code>/usr/local/bin/fuse-overlayfs&lt;/code>.&lt;/p>
&lt;h1 id="installation-of-dockerio">Installation of &lt;code>docker.io&lt;/code>&lt;/h1>
&lt;p>&lt;code>docker.io&lt;/code> is the Debian specific build of the Moby container engine. Unlike noted in the &lt;a href="https://docs.docker.com/engine/install/ubuntu/">Docker documentation&lt;/a> this isn&amp;rsquo;t an old version but rather a version &lt;a href="https://salsa.debian.org/go-team/packages/docker">packaged by the Debian Go team&lt;/a>.&lt;/p>
&lt;pre>&lt;code>apt-get install docker.io
&lt;/code>&lt;/pre>&lt;p>In my case this installed the version 20.10.2&lt;/p>
&lt;pre>&lt;code># docker info
Client:
Context: default
Debug Mode: false
Server:
Containers: 2
Running: 0
Paused: 0
Stopped: 2
Images: 1
Server Version: 20.10.2
Storage Driver: fuse-overlayfs
Logging Driver: json-file
Cgroup Driver: cgroupfs
Cgroup Version: 1
(...)
&lt;/code>&lt;/pre>&lt;p>To my surprise, it auto-detected that I have &lt;code>fuse-overlayfs&lt;/code> installed and uses it. And this although I&amp;rsquo;m not using rootless Docker!&lt;/p>
&lt;p>Now I can use Docker nested in LXC on Proxmox VE without the efficiency problems of VFS.&lt;/p>
&lt;h1 id="future-work">Future Work&lt;/h1>
&lt;p>It would be also interesting to use Podman in LXC on Proxmox PVE but I couldn&amp;rsquo;t get it working so far. I know it&amp;rsquo;s possible to use rootless Podman in unprivileged &lt;a href="https://linuxcontainers.org/lxd/introduction/">LXD&lt;/a> container using the &lt;code>security.nesting&lt;/code> flag. However LXC on PVE is a bit different from LXD.&lt;/p></content></item><item><title>First post</title><link>https://c-goes.github.io/posts/first-post/</link><pubDate>Thu, 13 May 2021 15:00:00 +0200</pubDate><guid>https://c-goes.github.io/posts/first-post/</guid><description>I&amp;rsquo;m writing this blog about Linux containers and related things. I mainly will use it to document steps on how to set up containers in different scenarios.</description><content>&lt;p>I&amp;rsquo;m writing this blog about Linux containers and related things. I mainly will use it to document steps on how to set up containers in different scenarios.&lt;/p></content></item></channel></rss>